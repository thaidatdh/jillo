{"version":3,"sources":["serviceWorker.js","components/login/login/login.js","components/login/register/register.js","components/login/login-index.js","components/home/header/header.js","components/home/dashboard/Board/board.js","components/home/dashboard/component/add-new-board.js","components/home/dashboard/dashboard.js","components/board/components/board-nav.js","components/board/components/card.js","components/board/components/card-new.js","components/board/components/column.js","components/board/board-main.js","components/home/home.js","components/profile/profile.js","app.js","index.js"],"names":["Boolean","window","location","hostname","match","Login","props","useState","isAbleToLogin","setIsAbleToLogin","username","setUsername","password","setPassword","error","setError","message","setMessage","history","useHistory","localStorage","token_id","to","className","onSubmit","e","preventDefault","length","console","log","requestOptions","method","headers","Accept","body","JSON","stringify","email","fetch","then","res","json","response","success","setItem","token","data","push","msg","catch","style","backgroundColor","color","padding","borderRadius","marginTop","marginBottom","id","type","placeholder","autocomplete","required","focus","aria-invalid","onChange","text","onUsernameChange","target","value","maxLength","onPasswordChange","disabled","Register","isAcceptTerm","setAcceptTerm","name","setName","setEmail","setSuccess","layout","autoComplete","ng-model","pattern","htmlFor","checked","LoginIndex","formState","setFormState","element","onClick","Header","useEffect","decoded","jwt_decode","aria-hidden","role","tabIndex","Dropdown","Toggle","variant","borderWidth","width","height","display","justifyContent","alignSelf","justifySelf","Menu","flexDirection","Item","href","removeItem","DATE_OPTIONS","year","month","day","Board","board","columns","setColumns","cardNumber","setCardNumber","created_at","Date","toLocaleDateString","fetchLink","_id","Headers","slice","sort","a","b","order","columnIdList","map","col","fetchLinkCards","link_to","key","item","OverlayTrigger","placement","overlay","Tooltip","background","minHeight","onCopy","copy","icon","marginRight","trigger","modal","nested","close","borderColor","AddNewBoard","onClose","class","tabindex","Alert","alignItems","paddingLeft","paddingRight","textAlign","aria-label","for","maxlength","autofocus","selected","label","nclass","owner_id","forEach","requestOptionsCol","board_id","resCol","responseCol","errorCol","Dashboard","listBoard","setListBoard","isCopyUrl","setIsCopyUrl","user_id","onCopyUrl","AddNewItem","BoardNav","setBoard","tempBoardName","setTempBoardName","isNameText","setIsNameText","boardId","menu","onShare","Card","parse","card","setCard","isEditing","setIsEditing","tempContent","setTempContent","renderCardView","desc","renderCardEdit","msd-elastic","data-gramm_editor","overflow","overflowWrap","resize","flex","marginLeft","borderLeftColor","borderRightColor","boardOwner","onDelete","messageid","CardNew","content","index","trim","column_id","column","onSave","Column","cards","setCards","setColumn","setColor","isEditingColumnName","setIsEditingColumnName","tempColName","setTempColName","newCards","setNewCards","cardsList","onChangeNewCard","onClickCloseNewCard","nc","concat","onSaveNewCard","popoverColorPicker","Popover","Content","onChangeComplete","colorChanged","hex","data-column-id","data-column-index","idt","filter","dragula","dragula-model","reverse","newList","owner","renderCards","BoardMain","setBoardId","isCopyMessageShow","setIsCopyMessageShow","useParams","dismissible","main-content","Home","Profile","user","setUser","createdAt","setCreatedAt","isChangeEmail","setIsChangeEmail","isChangePassword","setIsChangePassword","currentPwd","setCurrentPwd","newPwd","setNewPwd","newEmail","setNewEmail","successMsg","setSuccessMsg","created_at_temp","nameChanged","UpdatedUser","requestOptionsPwd","App","path","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e4453ec6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState } from \"react\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport \"./login.css\";\r\n\r\nfunction Login(props) {\r\n  const [isAbleToLogin, setIsAbleToLogin] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const history = useHistory();\r\n  const onPasswordChange = (text) => {\r\n    setPassword(text);\r\n    if (text.length >= 8 && username.length > 0) {\r\n      setIsAbleToLogin(true);\r\n    } else {\r\n      setIsAbleToLogin(false);\r\n    }\r\n  };\r\n  const onUsernameChange = (text) => {\r\n    setUsername(text);\r\n    if (password.length >= 8 && text.length > 0) {\r\n      setIsAbleToLogin(true);\r\n    } else {\r\n      setIsAbleToLogin(false);\r\n    }\r\n  };\r\n  const onLogin = (e) => {\r\n    e.preventDefault();\r\n    if (password.length < 8 || username.length <= 0) {\r\n      console.log('error');\r\n      return;\r\n    }\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: username,\r\n        password: password,\r\n      }),\r\n    };\r\n    fetch(\"https://jillo-backend.herokuapp.com/api/user/signin\", requestOptions)\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        setError(!response.success);\r\n        console.log(error);\r\n        if (response.success) {\r\n          localStorage.setItem(\"token\", response.token);\r\n          localStorage.setItem(\"token_id\", response.data);\r\n          history.push(\"/\");\r\n        } else {\r\n          setMessage(response.msg);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setError(\"Error when login\");\r\n        console.log(error);\r\n      });\r\n  };\r\n  if (localStorage.token_id) {\r\n    return <Redirect to=\"/\"/>\r\n  }\r\n  return (\r\n    <form className=\"form\" onSubmit={onLogin}>\r\n      <h2>Login</h2>\r\n      {error ? (\r\n        <div\r\n          style={{\r\n            backgroundColor: \"red\",\r\n            color: \"darkred\",\r\n            padding: 10,\r\n            borderRadius: 10,\r\n            marginTop: 10,\r\n            marginBottom: 20\r\n          }}\r\n        >\r\n          {message}\r\n        </div>\r\n      ) : null}\r\n      <div className=\"form-group\">\r\n        <input\r\n          id=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Username (or Email)\"\r\n          autocomplete=\"username\"\r\n          required=\"\"\r\n          focus=\"\"\r\n          className=\"ng-pristine ng-empty ng-invalid ng-invalid-required ng-touched\"\r\n          aria-invalid=\"true\"\r\n          onChange={(text) => onUsernameChange(text.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          maxLength=\"75\"\r\n          placeholder=\"Password\"\r\n          autocomplete=\"current-password\"\r\n          required=\"\"\r\n          className=\"ng-pristine ng-untouched ng-empty ng-invalid ng-invalid-required ng-valid-maxlength\"\r\n          aria-invalid=\"true\"\r\n          onChange={(text) => onPasswordChange(text.target.value)}\r\n        />\r\n        <Link\r\n          to=\"/forgot-password\"\r\n          className=\"forgot-password\"\r\n          style={{ color: \"black\" }}\r\n        >\r\n          Forgot password?\r\n        </Link>\r\n      </div>\r\n      <button\r\n        type=\"submit\"\r\n        className=\"button first\"\r\n        disabled={!isAbleToLogin}\r\n        /*onClick={onLogin}*/\r\n      >\r\n        Login\r\n      </button>\r\n      <br />\r\n      <button className=\"google-login\">Google Login</button>\r\n      <br />\r\n      Or &nbsp;\r\n      <Link to=\"/register\" style={{ color: \"black\" }}>\r\n        Register\r\n      </Link>\r\n    </form>\r\n  );\r\n}\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport \"./register.css\";\r\n\r\nfunction Register(props) {\r\n  const [isAcceptTerm, setAcceptTerm] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  //const [isReceiveEmail, setIsReceiveEmail] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n  const onCheckTerm = (e) => {\r\n    setAcceptTerm(e.target.checked);\r\n  };\r\n  /*const onCheckReceiveEmail = (e) => {\r\n    setIsReceiveEmail(e.target.checked);\r\n  }*/\r\n  const onUsernameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n  const onNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const onEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const onPasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n  const onRegister = (e) => {\r\n    e.preventDefault();\r\n    if (password.length < 8 || username.length <= 0) {\r\n      return;\r\n    }\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: username,\r\n        name: name,\r\n        password: password,\r\n        email: email,\r\n      }),\r\n    };\r\n    fetch(\"https://jillo-backend.herokuapp.com/api/user/signup\", requestOptions)\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setSuccess(response.success);\r\n        setError(response.msg);\r\n      })\r\n      .catch((error) => {\r\n        setError(\"Error when register\");\r\n        console.log(error);\r\n      });\r\n  };\r\n  if (localStorage.token_id) {\r\n    return <Redirect to=\"/\"/>\r\n  }\r\n  return (\r\n    <form\r\n      className=\"form ng-pristine ng-invalid ng-invalid-required ng-valid-maxlength ng-valid-email ng-valid-pattern\"\r\n      layout=\"column\"\r\n      onSubmit={onRegister}\r\n    >\r\n      <h2>Register</h2>\r\n      {error && !success ? (\r\n        <div\r\n          style={{\r\n            backgroundColor: \"red\",\r\n            color: \"darkred\",\r\n            padding: 10,\r\n            borderRadius: 10,\r\n            marginTop: 10,\r\n            marginBottom: 20\r\n          }}\r\n        >\r\n          {error}\r\n        </div>\r\n      ) : null}\r\n      {success ? (\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#d4edda\",\r\n            color: \"darkred\",\r\n            padding: 10,\r\n            borderRadius: 10,\r\n            marginTop: 10,\r\n            marginBottom: 20\r\n          }}\r\n        >\r\n          {error}\r\n        </div>\r\n      ) : null}\r\n      \r\n      <div className=\"form-group\">\r\n        <input\r\n          id=\"name\"\r\n          maxLength=\"100\"\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          autoComplete=\"given-name\"\r\n          required=\"\"\r\n          focus=\"\"\r\n          className=\"ng-pristine ng-empty ng-invalid ng-invalid-required ng-valid-maxlength ng-touched\"\r\n          aria-invalid=\"true\"\r\n          onChange={onNameChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          id=\"username\"\r\n          maxLength=\"100\"\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          autoComplete=\"username\"\r\n          required=\"\"\r\n          className=\"ng-pristine ng-untouched ng-empty ng-valid-email ng-invalid ng-invalid-required ng-valid-maxlength\"\r\n          aria-invalid=\"true\"\r\n          onChange={onUsernameChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          id=\"email\"\r\n          maxLength=\"100\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          autoComplete=\"username\"\r\n          required=\"\"\r\n          className=\"ng-pristine ng-untouched ng-empty ng-valid-email ng-invalid ng-invalid-required ng-valid-maxlength\"\r\n          aria-invalid=\"true\"\r\n          onChange={onEmailChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          id=\"password\"\r\n          ng-model=\"password\"\r\n          type=\"password\"\r\n          maxLength=\"75\"\r\n          pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*?[0-9])(?=.*[a-z]).*$\"\r\n          placeholder=\"Password\"\r\n          autoComplete=\"new-password\"\r\n          required=\"\"\r\n          className=\"ng-pristine ng-untouched ng-empty ng-invalid ng-invalid-required ng-valid-pattern ng-valid-maxlength\"\r\n          aria-invalid=\"true\"\r\n          onChange={onPasswordChange}\r\n        />\r\n        <small className=\"hint\">\r\n          Should contain at least 8 chars, 1 number, 1 uppercase, 1 lowercase\r\n          and 1 special char.\r\n        </small>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"accept-terms\">\r\n          <input\r\n            id=\"accept-terms\"\r\n            type=\"checkbox\"\r\n            required=\"\"\r\n            className=\"ng-pristine ng-untouched ng-empty ng-invalid ng-invalid-required\"\r\n            aria-invalid=\"true\"\r\n            onChange={onCheckTerm}\r\n          />\r\n          By signing up you agree to our &nbsp;\r\n          <Link to=\"/terms\" style={{ color: \"black\" }}>\r\n            Terms\r\n          </Link>\r\n          &nbsp; and &nbsp;\r\n          <Link to=\"/privacy\" style={{ color: \"black\" }}>\r\n            Privacy Policy\r\n          </Link>\r\n        </label>\r\n        <br />\r\n        {/*<label htmlFor=\"accept-subs\">\r\n          <input\r\n            id=\"accept-subs\"\r\n            type=\"checkbox\"\r\n            className=\"ng-pristine ng-untouched ng-valid ng-empty\"\r\n            aria-invalid=\"false\"\r\n            onChange={onCheckReceiveEmail}\r\n          />\r\n          I want to receive updates, promotions and tips in my inbox\r\n  </label>*/}\r\n      </div>\r\n      <br />\r\n      <button\r\n        type=\"submit\"\r\n        className=\"button first\"\r\n        disabled={!isAcceptTerm}\r\n        /*onClick={onRegister}*/\r\n      >\r\n        Register\r\n      </button>\r\n      <br />\r\n      <button type=\"button\" className=\"google-login\" disabled={!isAcceptTerm}>\r\n        Google Login\r\n      </button>\r\n      <br />\r\n      Or{\" \"}\r\n      <Link to=\"/login\" style={{ color: \"black\" }}>\r\n        Login\r\n      </Link>\r\n    </form>\r\n  );\r\n}\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\nimport Login from \"./login/login\";\r\nimport Register from \"./register/register\";\r\n\r\nfunction LoginIndex(props) {\r\n  const [formState, setFormState] = useState(props.formState);\r\n  const changeLocation = (directory) => {\r\n    console.log(\"change location\");\r\n  };\r\n  const onChangeFormStateLogin = () => {\r\n    setFormState(\"login\");\r\n  };\r\n  const onChangeFormStateRegister = () => {\r\n    setFormState(\"register\");\r\n  };\r\n  let element =\r\n    props.formState === \"login\" ? (\r\n      <Login setFormState={onChangeFormStateRegister} />\r\n    ) : (\r\n      <Register setFormState={onChangeFormStateLogin} />\r\n    );\r\n  return (\r\n    <span className=\"form-container\">\r\n      <a onClick={changeLocation(\"/\")}>\r\n        {\" \"}\r\n        <h1>Jillo</h1>{\" \"}\r\n      </a>\r\n      {element}\r\n    </span>\r\n  );\r\n}\r\nexport default LoginIndex;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport \"./header.css\";\r\n\r\nfunction Header(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const history = useHistory();\r\n  const onSignOut = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"token_id\");\r\n    history.push(\"/login\");\r\n  };\r\n  useEffect(() => {\r\n    if (localStorage.token) {\r\n      try {\r\n        let decoded = jwt_decode(localStorage.token);\r\n        setName(decoded.name);\r\n      } catch (error) {\r\n        // ignore\r\n      }\r\n    }\r\n  }, []);\r\n  if (!localStorage.token_id) {\r\n    return history.push(\"/login\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"app-header\" aria-hidden=\"false\">\r\n        <div className=\"header-filters\">\r\n          <div className=\"logo\" role=\"button\" tabIndex=\"0\">\r\n            <span>\r\n              <Link to=\"/\">Jillo</Link>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <span className=\"header-controls\">\r\n          <span className=\"header-icon\">\r\n            <Dropdown style={{ backgroundColor: \"transparent\" }}>\r\n              <Dropdown.Toggle\r\n                variant=\"success\"\r\n                id=\"dropdown-basic\"\r\n                className=\"user-menu\"\r\n                style={{\r\n                  backgroundColor: \"gray\",\r\n                  borderWidth: 0,\r\n                  borderRadius: 12.5,\r\n                  width: 25,\r\n                  height: 25,\r\n                }}\r\n              >\r\n                <span\r\n                  className=\"user-menu\"\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignSelf: \"center\",\r\n                    justifySelf: \"center\",\r\n                  }}\r\n                >\r\n                  {name.length > 0 ? name[0] : \"?\"}\r\n                </span>\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu\r\n                style={{\r\n                  backgroundColor: \"white\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n              >\r\n                <Dropdown.Header>{name}</Dropdown.Header>\r\n                <Dropdown.Item href=\"/profile\">Profile</Dropdown.Item>\r\n                <Dropdown.Item onClick={onSignOut}>Sign Out</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </span>\r\n        </span>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\nexport default Header;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { Popup } from \"reactjs-popup\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./board.css\";\r\nconst DATE_OPTIONS = { year: \"numeric\", month: \"short\", day: \"numeric\" };\r\nfunction Board(props) {\r\n  const [board, setBoard] = useState(props.board);\r\n  const [columns, setColumns] = useState([]);\r\n  const [cardNumber, setCardNumber] = useState(0);\r\n  const created_at = new Date(board.created_at).toLocaleDateString(\r\n    \"en-US\",\r\n    DATE_OPTIONS\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchLink = `https://jillo-backend.herokuapp.com/api/column/board/${board._id}`;\r\n    fetch(fetchLink, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Accept: \"application/json; charset=utf-8\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        let data = response.data.slice();\r\n        data.sort(function (a, b) {\r\n          return a.order - b.order;\r\n        });\r\n        setColumns(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    if (columns.length === 0) return;\r\n    const columnIdList = columns.map((col) => col._id);\r\n    const fetchLinkCards = `https://jillo-backend.herokuapp.com/api/card/column/columns=${columnIdList}/count`;\r\n    fetch(fetchLinkCards, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Accept: \"application/json; charset=utf-8\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setCardNumber(response.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  });\r\n  const onCopyUrl = () => {\r\n    props.onCopy();\r\n    copy(`http://localhost:3000/board/${board._id}`);\r\n  };\r\n  const onDelete = () => {\r\n    const requestOptions = {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(`https://jillo-backend.herokuapp.com/api/board/${board._id}`, requestOptions)\r\n      .then((res) => res.json())\r\n      .then((response) => {})\r\n      .catch((error) => console.log(error));\r\n  };\r\n  const renderListColumns = () => {\r\n    return columns.length > 0 ? (\r\n      columns.map((item) => (\r\n        <li key={item._id} className=\"board-small-column ng-scope\">\r\n          <span className=\"board-small-column-name ng-binding\">\r\n            {item.name}\r\n          </span>\r\n          <OverlayTrigger\r\n            placement=\"top\"\r\n            overlay={\r\n              <Tooltip\r\n                style={{\r\n                  backgroundColor: \"black\",\r\n                  color: \"white\",\r\n                  padding: 5,\r\n                  marginBottom: 3,\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                {item.name}\r\n              </Tooltip>\r\n            }\r\n          >\r\n            <ul className=\"column\">\r\n              <li\r\n                className=\"front\"\r\n                style={{\r\n                  background: item.color,\r\n                  width: \"100%\",\r\n                  minHeight: \"7px\",\r\n                }}\r\n              >\r\n                &nbsp;\r\n              </li>\r\n            </ul>\r\n          </OverlayTrigger>\r\n        </li>\r\n      ))\r\n    ) : (\r\n      <li className=\"board-small-column ng-scope\">\r\n        <span className=\"board-small-column-name ng-binding\"></span>\r\n        <ul className=\"column\">\r\n          <li\r\n            className=\"front\"\r\n            style={{\r\n              background: \"transparent\",\r\n              width: \"100%\",\r\n              minHeight: \"7px\",\r\n            }}\r\n          >\r\n            &nbsp;\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    );\r\n  };\r\n  const link_to = `/board/${board._id}`;\r\n  return (\r\n    <li\r\n      key={0}\r\n      className=\"dashboard-item dashboard-board ng-scope\"\r\n      id=\"board_0\"\r\n    >\r\n      <a>\r\n        <div className=\"dashboard-item-body\">\r\n          <p className=\"board-name ng-binding\">\r\n            <Link to={link_to}>{board.name}</Link>\r\n          </p>\r\n          <p className=\"ng-binding\"></p>\r\n          <span className=\"board-date ng-binding\">\r\n            <i className=\"fa fa-clock\"></i>\r\n            {created_at}\r\n          </span>\r\n          <span className=\"tag ng-binding ng-scope\">{cardNumber} cards</span>\r\n        </div>\r\n        <ul className=\"board-small ng-scope\">{renderListColumns()}</ul>\r\n      </a>\r\n      <div className=\"board-actions\" aria-hidden=\"false\">\r\n        <a className=\"board-action\" aria-hidden=\"false\" onClick={onCopyUrl}>\r\n          <FontAwesomeIcon icon=\"copy\" style={{ marginRight: 5 }} /> URL\r\n        </a>\r\n\r\n        <Popup\r\n          trigger={\r\n            <a className=\"board-action\" aria-hidden=\"false\">\r\n              <FontAwesomeIcon icon=\"trash-alt\" style={{ marginRight: 5 }} />{\" \"}\r\n              Delete\r\n            </a>\r\n          }\r\n          modal\r\n          nested\r\n        >\r\n          {(close) => (\r\n            <div\r\n              className=\"modal swal2-popup\"\r\n              style={{\r\n                borderColor: \"black\",\r\n                borderWidth: 10,\r\n                backgroundColor: \"#2196f3\",\r\n              }}\r\n            >\r\n              <div className=\"content\">\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"white\",\r\n                    padding: 20,\r\n                    borderRadius: 10,\r\n                  }}\r\n                >\r\n                  <h2 style={{ color: \"black\" }}>\r\n                    Are you sure you want to delete{\" \"}\r\n                    <strong>{board.name}</strong>?\r\n                  </h2>\r\n                  <div\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-around\",\r\n                      marginTop: 10,\r\n                    }}\r\n                  >\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"swal2-confirm swal2-styled\"\r\n                      style={{\r\n                        marginTop: 10,\r\n                      }}\r\n                      onClick={() => {\r\n                        onDelete();\r\n                        close();\r\n                      }}\r\n                    >\r\n                      Yes, delete it!\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"swal2-cancel swal2-styled\"\r\n                      onClick={() => {\r\n                        close();\r\n                      }}\r\n                    >\r\n                      No. Keep it!\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Popup>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\nexport default Board;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {Alert} from 'react-bootstrap'\r\nimport \"./add-new-board.css\";\r\n\r\nfunction AddNewBoard(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const onClose = props.onClose;\r\n  const onNameChange = (e) => {\r\n    setName(e.target.value);\r\n  }\r\n  const onCreate = () => {\r\n    if (name.length === 0) {\r\n      setError(\"Please Enter valid Name\");\r\n      return;\r\n    }\r\n    //Create Board\r\n    const owner_id = localStorage.token_id;\r\n    const columns = [\r\n      { name: \"Went Well\", color: \"#009688\", order: 1 },\r\n      { name: \"To Improve\", color: \"#e91e62\", order: 2 },\r\n      { name: \"Action Items\", color: \"#8727b0\", order: 3 },\r\n    ];\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name: name, owner_id: owner_id }),\r\n    };\r\n    fetch(\"https://jillo-backend.herokuapp.com/api/board\", requestOptions)\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        if (response.data) {\r\n          const board = response.data;\r\n          columns.forEach((col) => {\r\n            const requestOptionsCol = {\r\n              method: \"POST\",\r\n              headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify({\r\n                name: col.name,\r\n                color: col.color,\r\n                board_id: board._id,\r\n                order: col.order\r\n              }),\r\n            };\r\n            fetch(\"https://jillo-backend.herokuapp.com/api/column\", requestOptionsCol)\r\n              .then((resCol) => resCol.json())\r\n              .then((responseCol) => {\r\n                onClose();\r\n              })\r\n              .catch((errorCol) => console.log(errorCol));\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  return (\r\n    <div\r\n      className=\"modal swal2-popup\"\r\n      style={{\r\n        borderColor: \"black\",\r\n        borderWidth: 10,\r\n        backgroundColor: \"#2196f3\",\r\n      }}\r\n    >\r\n      <div className=\"content\">\r\n        <div\r\n          class=\"create-board form create-board-show\"\r\n          role=\"button\"\r\n          tabindex=\"0\"\r\n        >\r\n          {error ? (\r\n            <Alert\r\n              variant=\"error\"\r\n              style={{\r\n                display: \"flex\",\r\n                backgroundColor: \"#f8d7da\",\r\n                flexDirection: \"row-reverse\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                paddingLeft: 50,\r\n                paddingRight: 50,\r\n                marginBottom: 10\r\n              }}\r\n            >\r\n              <p style={{ color: \"darkred\", textAlign: \"center\" }}>{error}</p>\r\n            </Alert>\r\n          ) : null}\r\n          <div\r\n            class=\"create-board-header\"\r\n            style={{\r\n              flexDirection: \"row\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <a style={{ justifySelf: \"flex-start\", alignSelf: \"center\" }}>\r\n              <FontAwesomeIcon icon=\"times\" color=\"transparent\" />\r\n            </a>\r\n            <h1 style={{ justifySelf: \"center\" }}>Create Board</h1>\r\n            <a\r\n              style={{ justifySelf: \"flex-end\", alignSelf: \"center\" }}\r\n              aria-label=\"Close settings sidebar\"\r\n              onClick={() => props.onClose()}\r\n            >\r\n              <FontAwesomeIcon icon=\"times\" color=\"black\" />\r\n            </a>\r\n          </div>\r\n          <div class=\"create-board-body\">\r\n            <form\r\n              name=\"createBoardForm\"\r\n              class=\"ng-valid ng-valid-maxlength ng-dirty ng-valid-parse\"\r\n            >\r\n              <label for=\"newBoardName\">Name </label>\r\n              <input\r\n                id=\"newBoardName\"\r\n                type=\"text\"\r\n                maxlength=\"100\"\r\n                autofocus=\"\"\r\n                class=\"ng-pristine ng-valid ng-empty ng-valid-maxlength ng-touched\"\r\n                aria-invalid=\"false\"\r\n                value={name}\r\n                onChange={onNameChange}\r\n              />\r\n\r\n              <div class=\"template\">\r\n                <label for=\"template\" aria-hidden=\"false\">\r\n                  Template\r\n                </label>\r\n\r\n                <div class=\"ng-scope\">\r\n                  <span class=\"header-select-container board-select-container\">\r\n                    <select\r\n                      class=\"bigger ng-valid ng-not-empty ng-dirty ng-valid-parse ng-touched\"\r\n                      id=\"activity\"\r\n                      name=\"activity\"\r\n                      aria-invalid=\"false\"\r\n                    >\r\n                      <option\r\n                        selected={true}\r\n                        label=\"Went Well - To Improve - Action Items\"\r\n                        value=\"object:158\"\r\n                      >\r\n                        Went Well - To Improve - Action Items\r\n                      </option>\r\n                    </select>\r\n                  </span>\r\n\r\n                  <div class=\"ng-scope\">\r\n                    <div class=\"columns template\">\r\n                      <h3 nclass=\"ng-scope\">Columns</h3>\r\n                      <div>\r\n                        <ul>\r\n                          <li class=\"ng-scope\">\r\n                            <span class=\"ng-binding\">Went Well</span>\r\n                          </li>\r\n                          <li class=\"ng-scope\">\r\n                            <span class=\"ng-binding\">To Improve</span>\r\n                          </li>\r\n                          <li class=\"ng-scope\">\r\n                            <span class=\"ng-binding\">Action Items</span>\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button\r\n                value=\"Submit\"\r\n                type=\"button\"\r\n                class=\"confirm\"\r\n                onClick={onCreate}\r\n              >\r\n                CREATE\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default AddNewBoard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Board from \"./Board/board\";\r\nimport { Popup } from \"reactjs-popup\";\r\nimport AddNewBoard from './component/add-new-board'\r\nimport \"./dashboard.css\";\r\n\r\nfunction Dashboard(props) {\r\n  const [listBoard, setListBoard] = useState([]);\r\n  const [isCopyUrl, setIsCopyUrl] = useState(false);\r\n  useEffect(() => {\r\n    let user_id = localStorage.token_id;\r\n    fetch(`https://jillo-backend.herokuapp.com/api/board/user/${user_id}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Accept: \"application/json; charset=utf-8\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setListBoard(response.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  });\r\n  const onCopyUrl = () => {\r\n    setIsCopyUrl(true);\r\n  };\r\n  const renderListItems = () => {\r\n    return listBoard.map((item) => (\r\n      <Board key={item._id} board={item} onCopy={onCopyUrl} />\r\n    ));\r\n  };\r\n  const AddNewItem = (\r\n    <li\r\n      className=\"dashboard-item add-item tooltip ng-scope\"\r\n      role=\"button\"\r\n      tabIndex=\"0\"\r\n    >\r\n      <span className=\"add\">\r\n        <i className=\" fa fa-plus\"></i> <small>Add board</small>\r\n      </span>\r\n    </li>\r\n  );\r\n\r\n  if (!localStorage.token_id) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"dashboard ng-scope\">\r\n        <h1>My boards</h1>\r\n        <div className=\"ng-scope\">\r\n          {isCopyUrl ? (\r\n            <Alert\r\n              variant=\"success\"\r\n              style={{\r\n                display: \"flex\",\r\n                backgroundColor: \"#d4edda\",\r\n                flexDirection: \"row-reverse\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                paddingLeft: 50,\r\n                paddingRight: 50,\r\n              }}\r\n            >\r\n              <p style={{ color: \"#155724\", textAlign: \"center\" }}>\r\n                Board URL copied! Share it with people to collaborate.\r\n              </p>\r\n            </Alert>\r\n          ) : null}\r\n          <h2>\r\n            <span>\r\n              Public boards\r\n              <small>collaborate by sharing URL with people</small>\r\n            </span>\r\n          </h2>\r\n          <ul>\r\n            <Popup trigger={AddNewItem} modal nested>\r\n              {(close) => <AddNewBoard onClose={close} />}\r\n            </Popup>\r\n            {renderListItems()}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Dashboard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./board-nav.css\";\r\nfunction BoardNav(props) {\r\n  const [board, setBoard] = useState({});\r\n  const [tempBoardName, setTempBoardName] = useState(\"\");\r\n  const [isNameText, setIsNameText] = useState(true);\r\n  useEffect(() => {\r\n    fetch(`https://jillo-backend.herokuapp.com/api/board/${props.boardId}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Accept: \"application/json; charset=utf-8\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setBoard(response.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n  const onChangeBoardName = () => {\r\n    setIsNameText(false);\r\n    setTempBoardName(board.name);\r\n  };\r\n  const onCancelEditBoardName = () => {\r\n    setIsNameText(true);\r\n  };\r\n  const onSaveBoardName = () => {\r\n    if (tempBoardName === board.name) {\r\n      setIsNameText(true);\r\n      return;\r\n    }\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name: tempBoardName }),\r\n    };\r\n    fetch(`https://jillo-backend.herokuapp.com/api/board/${board._id}`, requestOptions)\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setBoard(response.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n    setIsNameText(true);\r\n  };\r\n  const onChangeBoardNameInput = (e) => {\r\n    setTempBoardName(e.target.value);\r\n  };\r\n  return !board ? <Redirect to=\"/\"/> :(\r\n    <div>\r\n      <nav menu=\"\" className=\"ng-scope\">\r\n        <div className=\"menu board-menu\" aria-hidden=\"false\">\r\n          <span\r\n            className=\"board-name-container\"\r\n            role=\"button\"\r\n            tabIndex=\"0\"\r\n            aria-hidden=\"false\"\r\n            style={{ display: isNameText ? \"inline-flex\" : \"none\" }}\r\n            onClick={onChangeBoardName}\r\n          >\r\n            <h2\r\n              id=\"board-name\"\r\n              className=\"board-name edit-board-name ng-binding\"\r\n            >\r\n              {board.name}\r\n            </h2>\r\n          </span>\r\n          <div\r\n            style={{\r\n              flexDirection: \"row\",\r\n              display: isNameText ? \"none\" : \"inline-flex\",\r\n            }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              maxLength=\"50\"\r\n              style={{ width: 200 }}\r\n              value={tempBoardName}\r\n              onChange={onChangeBoardNameInput}\r\n            />\r\n            <button onClick={onSaveBoardName}>Save</button>\r\n            <button onClick={onCancelEditBoardName}>Cancel</button>\r\n          </div>\r\n          <input\r\n            id=\"board-context\"\r\n            className=\"board-context ng-pristine ng-valid ng-empty ng-valid-maxlength ng-touched\"\r\n            placeholder=\"Set the context of the retrospective here...\"\r\n            maxLength=\"140\"\r\n            aria-label=\"Board context\"\r\n            aria-hidden=\"false\"\r\n            aria-invalid=\"false\"\r\n          />\r\n          <span className=\"menu-controls\">\r\n            <button className=\"normal-button import-btn copy-clipboard ng-scope\" onClick={() => props.onShare()}>\r\n              Share\r\n            </button>\r\n            {/*<button\r\n              className=\"new-column new-column-desktop\"\r\n              aria-hidden=\"false\"\r\n            >\r\n              New column\r\n            </button>*/}\r\n          </span>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\nexport default BoardNav;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"./column.css\";\r\nfunction Card(props) {\r\n  const backgroundColor = { backgroundColor: props.color };\r\n  const [card, setCard] = useState(JSON.parse(JSON.stringify(props.card)));\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [tempContent, setTempContent] = useState(\"\");\r\n  const onClickEdit = () => {\r\n    if (!localStorage.token_id) {\r\n      return;\r\n    }\r\n    setIsEditing(true);\r\n    setTempContent(card.desc);\r\n  };\r\n  const onChangeCardContentInput = (e) => {\r\n    setTempContent(e.target.value);\r\n  };\r\n  const onSave = () => {\r\n    if (tempContent === card.desc) {\r\n      setIsEditing(false);\r\n      return;\r\n    }\r\n    setCard({desc: tempContent});\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ desc: tempContent }),\r\n    };\r\n    fetch(`https://jillo-backend.herokuapp.com/api/card/${card._id}`, requestOptions)\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setCard(response.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n    setIsEditing(false);\r\n  };\r\n  const onDelete = () => {\r\n    if (localStorage.token_id !== props.boardOwner) {\r\n      return;\r\n    }\r\n    const requestOptions = {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(`https://jillo-backend.herokuapp.com/api/card/${card._id}`, requestOptions)\r\n      .then((res) => res.json())\r\n      .then((response) => {})\r\n      .catch((error) => console.log(error));\r\n  };\r\n  const renderCardView = (\r\n    <div className=\"front\" style={backgroundColor}>\r\n      <div className=\"message-main\">\r\n        <div className=\"message-body\">\r\n          <div className=\"text ng-binding\">{card.desc}</div>\r\n          <a\r\n            className=\"message-body-link ng-scope\"\r\n            aria-label=\"Edit message\"\r\n            onClick={onClickEdit}\r\n          >\r\n            <FontAwesomeIcon icon={[\"fas\", \"pen\"]} />\r\n          </a>\r\n        </div>\r\n        {/*<div className=\"votes\">\r\n              <strong className=\"vote-area\">\r\n                <a\r\n                  className=\"ng-scope message-body-link show-vote-count\"\r\n                  style={{ marginLeft: 5, marginRight: 5 }}\r\n                >\r\n                  <FontAwesomeIcon icon=\"thumbs-up\" />\r\n                </a>\r\n                <span className=\"ng-binding show-vote-count\">0</span>\r\n                <a\r\n                  className=\"message-body-link\"\r\n                  aria-label=\"New comment\"\r\n                  style={{ marginLeft: 5, marginRight: 5 }}\r\n                >\r\n                  <FontAwesomeIcon icon=\"comment\" />\r\n                </a>\r\n                <span className=\"ng-binding\">1</span>\r\n              </strong>\r\n            </div>*/}\r\n      </div>\r\n    </div>\r\n  );\r\n  const renderCardEdit = (\r\n    <div className=\"front\">\r\n      <div\r\n        className=\"message-body\"\r\n        style={{ flexDirection: \"column\", backgroundColor: props.color }}\r\n      >\r\n        <div>\r\n          <textarea\r\n            msd-elastic=\"\\n\\n\"\r\n            aria-label=\"Message text entry\"\r\n            data-gramm_editor=\"false\"\r\n            className=\"ng-pristine ng-valid ng-not-empty ng-touched\"\r\n            aria-invalid=\"false\"\r\n            style={{\r\n              overflow: \"hidden\",\r\n              overflowWrap: \"break-word\",\r\n              resize: \"none\",\r\n              width: \"100%\",\r\n              height: 54,\r\n            }}\r\n            onChange={onChangeCardContentInput}\r\n            value={tempContent}\r\n          ></textarea>\r\n        </div>\r\n        <div\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            width: \"100%\",\r\n            flex: 1,\r\n          }}\r\n        >\r\n          <button className=\"button-save\" onClick={onSave}>\r\n            DONE\r\n          </button>\r\n          <Popup\r\n            trigger={\r\n              <button\r\n                className=\"button-save\"\r\n                aria-label=\"Delete message\"\r\n                style={{\r\n                  backgroundColor: \"white\",\r\n                  borderColor: \"lightgray\",\r\n                  marginLeft: 10,\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={[\"fas\", \"trash-alt\"]} color=\"red\" />\r\n              </button>\r\n            }\r\n            modal\r\n            nested\r\n          >\r\n            {(close) => (\r\n              <div\r\n                className=\"modal swal2-popup\"\r\n                style={{\r\n                  borderColor: \"lightgray\",\r\n                  borderWidth: 2,\r\n                  backgroundColor: \"#2196f3\",\r\n                }}\r\n              >\r\n                <div className=\"content\">\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      padding: 20,\r\n                      borderRadius: 10,\r\n                    }}\r\n                  >\r\n                    <h2 style={{ color: \"black\" }}>\r\n                      Are you sure you want to delete?\r\n                    </h2>\r\n                    <div\r\n                      style={{\r\n                        flexDirection: \"row\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\",\r\n                        marginTop: 10,\r\n                      }}\r\n                    >\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"swal2-confirm swal2-styled\"\r\n                        aria-label=\"\"\r\n                        style={{\r\n                          borderLeftColor: \"#e91e63\",\r\n                          borderRightColor: \"#e91e63\",\r\n                        }}\r\n                        onClick={() => {\r\n                          onDelete();\r\n                          close();\r\n                        }}\r\n                      >\r\n                        Yes, delete it!\r\n                      </button>\r\n                      <button\r\n                        className=\"swal2-cancel swal2-styled\"\r\n                        onClick={() => {\r\n                          close();\r\n                        }}\r\n                      >\r\n                        No. Keep it!\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Popup>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <li id={\"new_\" + props.card._id} className=\"ng-scope message\">\r\n      <div messageid={\"new_\" + props.card._id}>\r\n        {isEditing ? renderCardEdit : renderCardView}\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\nexport default Card;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport \"./column.css\";\r\nfunction CardNew(props) {\r\n  const backgroundColor = { backgroundColor: props.color };\r\n  const [tempContent, setTempContent] = useState(props.content);\r\n  const onChangeCardContentInput = (e) => {\r\n    setTempContent(e.target.value);\r\n    props.onChange(props.index, e.target.value);\r\n  };\r\n  const onSave = () => {\r\n    if (!tempContent || tempContent.trim() === '') {\r\n      props.onClose(props.index);\r\n      return;\r\n    }\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ column_id: props.column, desc: tempContent })\r\n    };\r\n    fetch('https://jillo-backend.herokuapp.com/api/card', requestOptions)\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        if (response.data)\r\n          props.onSave(props.index, response.data);\r\n        else\r\n          props.onClose(props.index);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  const onDelete = () => {\r\n    props.onClose(props.index);\r\n  };\r\n\r\n  return (\r\n    <li id={\"new\"} className=\"ng-scope message\">\r\n      <div messageid={\"new\"}>\r\n        <div className=\"front\" style={backgroundColor}>\r\n          <div className=\"message-body\" style={{ flexDirection: \"column\" }}>\r\n            <div>\r\n              <textarea\r\n                msd-elastic=\"\\n\\n\"\r\n                aria-label=\"Message text entry\"\r\n                data-gramm_editor=\"false\"\r\n                className=\"ng-pristine ng-valid ng-not-empty ng-touched\"\r\n                aria-invalid=\"false\"\r\n                style={{\r\n                  overflow: \"hidden\",\r\n                  overflowWrap: \"break-word\",\r\n                  resize: \"none\",\r\n                  width: \"100%\",\r\n                  height: 54,\r\n                }}\r\n                onChange={onChangeCardContentInput}\r\n                value={props.content}\r\n              ></textarea>\r\n            </div>\r\n            <div\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                width: \"100%\",\r\n                flex: 1,\r\n              }}\r\n            >\r\n              <button className=\"button-save\" onClick={onSave}>\r\n                DONE\r\n              </button>\r\n              <button\r\n                className=\"button-save\"\r\n                aria-label=\"Delete message\"\r\n                style={{\r\n                  backgroundColor: \"white\",\r\n                  borderColor: \"lightgray\",\r\n                  marginLeft: 10,\r\n                }}\r\n                onClick={onDelete}\r\n              >\r\n                <FontAwesomeIcon icon={[\"fas\", \"trash-alt\"]} color=\"red\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\nexport default CardNew;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { OverlayTrigger, Popover } from \"react-bootstrap\";\r\nimport { CompactPicker } from \"react-color\";\r\nimport Card from \"./card\";\r\nimport CardNew from \"./card-new\";\r\nimport \"./column.css\";\r\nfunction Column(props) {\r\n  const [cards, setCards] = useState([]);\r\n  const [column, setColumn] = useState(props.column);\r\n  const [color, setColor] = useState(props.column.color);\r\n  const [isEditingColumnName, setIsEditingColumnName] = useState(false);\r\n  const [tempColName, setTempColName] = useState(\"\");\r\n  const [newCards, setNewCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://jillo-backend.herokuapp.com/api/card/column/${props.column._id}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Accept: \"application/json; charset=utf-8\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setCards(response.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  });\r\n  const handleChangeColorComplete = (colorChanged) => {\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ color: colorChanged.hex }),\r\n    };\r\n    fetch(`https://jillo-backend.herokuapp.com/api/column/${column._id}`, requestOptions)\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setColumn(response.data);\r\n        setColor(colorChanged.hex);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  const onEditColNameClick = () => {\r\n    setTempColName(column.name);\r\n    setIsEditingColumnName(true);\r\n  };\r\n  const onCancelEditColName = () => {\r\n    setIsEditingColumnName(false);\r\n  };\r\n  const onSaveColName = () => {\r\n    if (tempColName === column.name) {\r\n      setIsEditingColumnName(false);\r\n      return;\r\n    }\r\n    setColumn({ name: tempColName });\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name: tempColName }),\r\n    };\r\n    fetch(`https://jillo-backend.herokuapp.com/api/column/${column._id}`, requestOptions)\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setColumn(response.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n    setIsEditingColumnName(false);\r\n  };\r\n  const onChangeColNameInput = (e) => {\r\n    setTempColName(e.target.value);\r\n  };\r\n  const onClickAddNew = () => {\r\n    let nc = newCards.slice();\r\n    let idt = nc.length;\r\n    while (nc.filter((e) => e.id === idt).length > 0) {\r\n      idt = idt + 1;\r\n    }\r\n    nc.push({ id: idt, content: \"\", column_id: props.column._id });\r\n    setNewCards(nc);\r\n  };\r\n  const onChangeNewCard = (index, desc) => {\r\n    newCards[index].content = desc;\r\n  };\r\n  const onClickCloseNewCard = (index) => {\r\n    let nc = newCards.slice(0, index).concat(newCards.slice(index + 1));\r\n    setNewCards(nc);\r\n  };\r\n  const onSaveNewCard = (index, card) => {\r\n    onClickCloseNewCard(index);\r\n    let nc = [card];\r\n    nc = nc.concat(cards.slice());\r\n    setCards(nc);\r\n  };\r\n  const renderCards = (cardsList) => {\r\n    let newList = cardsList.slice();\r\n    newList.reverse();\r\n    return newList.map((card) => (\r\n      <Card key={card._id} color={color} card={card} boardOwner={props.owner} />\r\n    ));\r\n  };\r\n  const renderNewCards = (cardsList) => {\r\n    let newList = cardsList.slice();\r\n    newList.reverse();\r\n    return cardsList.map((card, index) => (\r\n      <CardNew\r\n        key={\"new_\" + card.id}\r\n        color={color}\r\n        index={index}\r\n        desc={card.content}\r\n        column={card.column_id}\r\n        onClose={onClickCloseNewCard}\r\n        onSave={onSaveNewCard}\r\n        onChange={onChangeNewCard}\r\n      />\r\n    ));\r\n  };\r\n  const popoverColorPicker = (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Content>\r\n        <CompactPicker\r\n          color={color}\r\n          onChangeComplete={handleChangeColorComplete}\r\n        />\r\n      </Popover.Content>\r\n    </Popover>\r\n  );\r\n  return (\r\n    <span\r\n      className=\"message-list ng-scope selected\"\r\n      data-column-id=\"1\"\r\n      data-column-index=\"0\"\r\n    >\r\n      <div className=\"column-header\">\r\n        <h2\r\n          className=\"ng-scope\"\r\n          style={{ flexDirection: \"row\", display: \"inline-flex\" }}\r\n        >\r\n          <span>\r\n            <OverlayTrigger\r\n              trigger=\"click\"\r\n              placement=\"bottom\"\r\n              overlay={popoverColorPicker}\r\n            >\r\n              <div\r\n                style={{\r\n                  backgroundColor: color,\r\n                  height: 15,\r\n                  width: 15,\r\n                  marginRight: 10,\r\n                  alignSelf: \"center\",\r\n                  borderRadius: 5,\r\n                }}\r\n              />\r\n            </OverlayTrigger>\r\n          </span>\r\n          <span\r\n            className=\"column-name ng-binding\"\r\n            role=\"button\"\r\n            tabIndex=\"0\"\r\n            onClick={onEditColNameClick}\r\n            style={{ display: !isEditingColumnName ? \"inline-flex\" : \"none\" }}\r\n          >\r\n            {column.name}\r\n          </span>\r\n          <div\r\n            style={{\r\n              flexDirection: \"column\",\r\n              display: !isEditingColumnName ? \"none\" : \"inherit\",\r\n            }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              maxLength=\"50\"\r\n              style={{ width: 200 }}\r\n              value={tempColName}\r\n              onChange={onChangeColNameInput}\r\n            />\r\n            <div\r\n              style={{\r\n                flexDirection: \"row\",\r\n                marginTop: 5,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <button onClick={onSaveColName}>Save</button>\r\n              <button onClick={onCancelEditColName}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </h2>\r\n\r\n        <button\r\n          className=\"add-card ng-scope\"\r\n          aria-label=\"Add new message\"\r\n          style={{ display: !isEditingColumnName ? \"inherit\" : \"none\" }}\r\n          onClick={onClickAddNew}\r\n        >\r\n          <FontAwesomeIcon icon=\"plus\" />\r\n        </button>\r\n      </div>\r\n      <ul\r\n        className=\"column\"\r\n        id=\"1\"\r\n        dragula='\"bag-one\"'\r\n        dragula-model=\"messages\"\r\n      >\r\n        {renderNewCards(newCards)}\r\n        {renderCards(cards)}\r\n      </ul>\r\n    </span>\r\n  );\r\n}\r\nexport default Column;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../home/header/header\";\r\nimport \"./board-main.css\";\r\nimport BoardNav from \"./components/board-nav\";\r\nimport Column from \"./components/column\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport copy from \"copy-to-clipboard\"; \r\nfunction BoardMain(props) {\r\n  const [boardId, setBoardId] = useState(props.boardId);\r\n  const [board, setBoard] = useState({});\r\n  const [columns, setColumns] = useState([]);\r\n  const [isCopyMessageShow, setIsCopyMessageShow] = useState(false);\r\n  \r\n  let { board_id } = useParams();\r\n  if (!props.boardId && !boardId) {\r\n    setBoardId(board_id);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(`https://jillo-backend.herokuapp.com/api/board/${boardId}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Accept: \"application/json; charset=utf-8\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setBoard(response.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n    if (!board) return;\r\n    fetch(`https://jillo-backend.herokuapp.com/api/column/board/${boardId}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Accept: \"application/json; charset=utf-8\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        let data = response.data.slice();\r\n        data.sort(function (a, b) {\r\n          return a.order - b.order;\r\n        });\r\n        setColumns(data);\r\n        console.log(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  });\r\n  const onShare = () => {\r\n    setIsCopyMessageShow(true);\r\n    copy(`http://localhost:3000/board/${boardId}`);\r\n  };\r\n  const renderColumns = (columnList) => {\r\n    return columnList.map((col) => <Column column={col} owner={board.owner_id} />);\r\n  };\r\n  if (!localStorage.token_id) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <BoardNav boardId={boardId} onShare={onShare} />\r\n      {isCopyMessageShow ? (\r\n        <Alert\r\n          variant=\"success\"\r\n          onClose={() => setIsCopyMessageShow(false)}\r\n          dismissible\r\n          style={{\r\n            display: \"flex\",\r\n            backgroundColor: \"#d4edda\",\r\n            flexDirection: \"row-reverse\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            paddingLeft: 50,\r\n            paddingRight: 50,\r\n          }}\r\n        >\r\n          <p style={{ color: \"#155724\", textAlign: \"center\" }}>\r\n            Board URL copied! Share it with people to collaborate.\r\n          </p>\r\n        </Alert>\r\n      ) : null}\r\n      <main\r\n        main-content=\"\"\r\n        className=\"ng-scope\"\r\n        style={{ flexDirection: \"row\", justifyContent: \"center\" }}\r\n      >\r\n        <span\r\n          dragula='\"bag-two\"'\r\n          id=\"capture\"\r\n          className=\"ng-isolate-scope container\"\r\n        >\r\n          {renderColumns(columns)}\r\n        </span>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nexport default BoardMain;\r\n","import React, { useState } from \"react\";\r\nimport \"./home.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Header from \"./header/header\";\r\nimport Dashboard from \"./dashboard/dashboard\";\r\nimport BoardMain from \"../board/board-main\";\r\nfunction Home(props) {\r\n  if (!localStorage.token_id) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Dashboard />\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport \"./profile.css\";\r\nimport Header from \"../home/header/header\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst DATE_OPTIONS = { year: \"numeric\", month: \"long\", day: \"numeric\" };\r\nfunction Profile(props) {\r\n  const [user, setUser] = useState({});\r\n  const [createdAt, setCreatedAt] = useState(\"\");\r\n  const [isChangeEmail, setIsChangeEmail] = useState(false);\r\n  const [isChangePassword, setIsChangePassword] = useState(false);\r\n  const [currentPwd, setCurrentPwd] = useState(\"\");\r\n  const [newPwd, setNewPwd] = useState(\"\");\r\n  const [newEmail, setNewEmail] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [successMsg, setSuccessMsg] = useState(\"\");\r\n  const onChangeName = (e) => {\r\n    let nameChanged = e.target.value;\r\n    setUser({\r\n      name: nameChanged,\r\n      email: user.email,\r\n      username: user.username,\r\n      _id: user._id,\r\n      created_at: user.created_at,\r\n    });\r\n  };\r\n  const onChangeEmail = (e) => {\r\n    setNewEmail(e.target.value);\r\n  };\r\n  const onChangeCurrentPwd = (e) => {\r\n    setCurrentPwd(e.target.value);\r\n  };\r\n  const onChangeNewPwd = (e) => {\r\n    setNewPwd(e.target.value);\r\n  };\r\n  const onUpdate = () => {\r\n    if (newPwd && newPwd.length < 8) {\r\n      setError(\"Please enter password with atleast 8 characters\");\r\n      return;\r\n    }\r\n    let UpdatedUser = {\r\n      name: user.name,\r\n      password: null,\r\n      email: null,\r\n    };\r\n    if (isChangeEmail && newEmail !== \"\" && newEmail !== user.email) {\r\n      UpdatedUser.email = newEmail;\r\n    }\r\n    if (isChangePassword && newPwd !== \"\" && newPwd.length > 8) {\r\n      UpdatedUser.password = newPwd;\r\n      console.log(UpdatedUser.password);\r\n    }\r\n    const requestOptionsPwd = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        user_id: localStorage.token_id,\r\n        password: currentPwd,\r\n      }),\r\n    };\r\n    fetch(`https://jillo-backend.herokuapp.com/api/user/checkpassword`, requestOptionsPwd)\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        let isCorrectPwd = response.success;\r\n        if (isCorrectPwd) {\r\n          setError(\"\");\r\n          const requestOptions = {\r\n            method: \"PUT\",\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(UpdatedUser),\r\n          };\r\n          fetch(\r\n            `https://jillo-backend.herokuapp.com/api/user/${localStorage.token_id}`,\r\n            requestOptions\r\n          )\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n              localStorage.token = response.token;\r\n              setUser(UpdatedUser);\r\n              setError(\"\");\r\n              let msg =\r\n                isChangeEmail && isChangePassword\r\n                  ? \"Email and Password\"\r\n                  : isChangeEmail\r\n                  ? \"Email\"\r\n                  : isChangePassword\r\n                  ? \"Password\"\r\n                  : \"\";\r\n              setSuccessMsg(\"Updated \" + msg);\r\n            })\r\n            .catch((error) => setError(\"Error when Saving!\"));\r\n        } else {\r\n          setError(response.msg);\r\n        }\r\n      })\r\n      .catch((error) => setError(\"Error when Checking current Password!\"));\r\n  };\r\n  useEffect(() => {\r\n    if (localStorage.token) {\r\n      try {\r\n        let decoded = jwt_decode(localStorage.token);\r\n        const created_at_temp = new Date(decoded.created_at).toLocaleDateString(\r\n          \"en-US\",\r\n          DATE_OPTIONS\r\n        );\r\n        let user = {\r\n          _id: decoded._id,\r\n          name: decoded.name,\r\n          username: decoded.username,\r\n          email: decoded.email,\r\n          created_at: decoded.created_at,\r\n        };\r\n        setUser(user);\r\n        setCreatedAt(created_at_temp);\r\n      } catch (error) {\r\n        // ignore\r\n      }\r\n    }\r\n  }, []);\r\n  if (!localStorage.token_id) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div>\r\n        <form\r\n          className=\"form form-tabs ng-pristine ng-valid ng-valid-required\"\r\n          layout=\"column\"\r\n        >\r\n          <div className=\"tabs\">\r\n            <a className=\"active\">User Profile</a>\r\n          </div>\r\n          <div className=\"ng-scope\">\r\n            <div className=\"form-group\">\r\n              <label>Username</label>\r\n              <br />\r\n              <strong id=\"current-username\" className=\"ng-binding\">\r\n                {user.username}\r\n              </strong>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Name</label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                required=\"\"\r\n                className=\"ng-pristine ng-untouched ng-scope ng-not-empty ng-valid ng-valid-required\"\r\n                aria-invalid=\"false\"\r\n                value={user.name}\r\n                onChange={onChangeName}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Email</label>\r\n              <br />\r\n              <strong id=\"current-email\" className=\"ng-binding\">\r\n                {user.email}\r\n              </strong>\r\n              <br />\r\n              {isChangeEmail ? (\r\n                <div>\r\n                  <br />\r\n                  <input\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    placeholder=\"New Email\"\r\n                    required=\"\"\r\n                    className=\"ng-pristine ng-untouched ng-scope ng-not-empty ng-valid ng-valid-required\"\r\n                    aria-invalid=\"false\"\r\n                    value={newEmail}\r\n                    onChange={onChangeEmail}\r\n                    style={{ marginBottom: 10 }}\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    style={{\r\n                      backgroundColor: \"gray\",\r\n                      borderRadius: 10,\r\n                      marginTop: 0,\r\n                    }}\r\n                    onClick={() => {\r\n                      setNewEmail(user.email);\r\n                      setIsChangeEmail(false);\r\n                    }}\r\n                  >\r\n                    Cancel change email\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <a className=\"ng-scope\" onClick={() => setIsChangeEmail(true)}>\r\n                  Change email\r\n                </a>\r\n              )}\r\n            </div>\r\n            <br className=\"ng-scope\" />\r\n            <div className=\"form-group ng-scope\">\r\n              <label>Password</label>\r\n              <br />\r\n              {isChangePassword ? (\r\n                <div>\r\n                  <br />\r\n                  <input\r\n                    id=\"new-password\"\r\n                    type=\"password\"\r\n                    placeholder=\"New Password\"\r\n                    required=\"\"\r\n                    className=\"ng-pristine ng-untouched ng-scope ng-not-empty ng-valid ng-valid-required\"\r\n                    aria-invalid=\"false\"\r\n                    value={newPwd}\r\n                    onChange={onChangeNewPwd}\r\n                    style={{ marginBottom: 5 }}\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    style={{\r\n                      backgroundColor: \"gray\",\r\n                      borderRadius: 10,\r\n                      marginTop: 0,\r\n                    }}\r\n                    onClick={() => {\r\n                      setNewPwd(\"\");\r\n                      setIsChangePassword(false);\r\n                    }}\r\n                  >\r\n                    Cancel change password\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <a\r\n                  className=\"ng-scope\"\r\n                  onClick={() => setIsChangePassword(true)}\r\n                >\r\n                  Reset password\r\n                </a>\r\n              )}\r\n            </div>\r\n            <br />\r\n            <div className=\"form-group\">\r\n              <label>Registered</label>\r\n              <br />\r\n              <strong className=\"ng-binding\">{createdAt}</strong>\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <input\r\n                id=\"current-password\"\r\n                type=\"password\"\r\n                placeholder=\"Current Password\"\r\n                required=\"\"\r\n                className=\"ng-pristine ng-untouched ng-scope ng-not-empty ng-valid ng-valid-required\"\r\n                aria-invalid=\"false\"\r\n                value={currentPwd}\r\n                onChange={onChangeCurrentPwd}\r\n              />\r\n              <br />\r\n            </div>\r\n\r\n            {error ? (\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"red\",\r\n                  color: \"darkred\",\r\n                  padding: 10,\r\n                  borderRadius: 10,\r\n                  marginTop: 10,\r\n                  marginBottom: 20,\r\n                }}\r\n              >\r\n                {error}\r\n              </div>\r\n            ) : null}\r\n            {!error && successMsg ? (\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"#d4edda\",\r\n                  color: \"#155724\",\r\n                  padding: 10,\r\n                  borderRadius: 10,\r\n                  marginTop: 10,\r\n                  marginBottom: 20,\r\n                }}\r\n              >\r\n                {successMsg}\r\n              </div>\r\n            ) : null}\r\n            <button\r\n              className=\"button first\"\r\n              type=\"button\"\r\n              aria-hidden=\"false\"\r\n              onClick={onUpdate}\r\n            >\r\n              Update\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport LoginIndex from \"./components/login/login-index\";\r\nimport Home from './components/home/home'\r\nimport BoardMain from \"./components/board/board-main\";\r\nimport Profile from './components/profile/profile';\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/login\">\r\n            <LoginIndex formState=\"login\" />\r\n          </Route>\r\n          <Route path=\"/register\">\r\n            <LoginIndex formState=\"register\" />\r\n          </Route>\r\n          <Route path=\"/profile\">\r\n            <Profile />\r\n          </Route>\r\n          <Route path=\"/board/:board_id\">\r\n            <BoardMain />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport App from './app';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}